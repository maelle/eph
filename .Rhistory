dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
base <- dplyr::bind_rows(toybase_individual_2016_03,
#'                           toybase_individual_2016_04)
#'
#'base_pobreza <- calculate_poverty(base = bases,
#'                                   basket = canastas_reg_example,
#'                                   print_summary=TRUE)
resultado <-
base %>%
calculate_poverty(basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
base <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
base <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
resultado <-
base %>%
calculate_poverty(basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
basket = canastas_reg_example
resultado <-
base %>%
calculate_poverty(basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
View(base)
base <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
resultado <-
bases %>%
calculate_poverty(basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
resultado <-
bases %>%
calculate_poverty(basket = eph::canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
canastas_reg_example
resultado <-
bases %>%
calculate_poverty(basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,group_vars,print_summary=TRUE,window = "quarter"){
base <<- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,group_vars,print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
canastas_reg_example
canastas_reg_example = canastas_reg_example
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,group_vars,print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
calculate_poverty <- function(base,basket,group_vars,print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
calculate_poverty <- function(base,basket,group_vars,print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
View(resultado)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,group_vars =c(),print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
#  window = "semestral",
print_summary=TRUE)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
#  window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,group_vars =c(),print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(base)
}
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
base_con_etiquetas <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
#  window = "semestral",
print_summary=TRUE)
base_con_etiquetas <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,print_summary=TRUE,window = "quarter",group_vars =c()){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(base)
}
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
base_con_etiquetas <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
base_con_etiquetas <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
print_summary=TRUE,
group_vars = c(CH04,NIVEL_ED),
window = "semestral")
?glue
install.packages("roxygen2")
install.packages("testthat")
remove. packages("roxygen2")
remove.packages("roxygen2")
install.packages("roxygen2", version = "7.1.2")
install.packages("knitr")
pkgdown::build_site()
install.packages("pkgdown")
pkgdown::build_site()
usethis::use_version(which = "minor")
devtools::document()
devtools::check()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_win_devel()
devtools::check_rhub()
devtools::submit_cran()
devtools::check_rhub()
devtools::submit_cran()
pkgdown::build_site()
?noNA
?tempfile
?unlink
?download.file
?glue
library(eph)
eph::get_poverty_lines(regional = FALSE)
a <- eph::get_poverty_lines(regional = FALSE)
View(a)
a <- eph::get_poverty_lines(regional = FALSE)
b <- eph::get_poverty_lines(regional = TRUE)
View(b)
a <- eph::get_poverty_lines(regional = FALSE)
b <- eph::get_poverty_lines(regional = TRUE)
library(eph)
a <- eph::get_poverty_lines(regional = FALSE)
a <- eph::get_poverty_lines(regional = TRUE)
library(eph)
eph::get_microdata(year = 2015, trimester = 4, type = "individual")
eph::get_microdata(year = 2018,trimester = 1,type = "individual")
eph::get_microdata(year = 2022, trimester = 4, type = "individual")
?usethis::use_version()
usethis::use_version(which = "patch")
usethis::use_version(which = "patch")
devtools::document()
devtools::check()
devtools::check_rhub()
source("D:/carol/Documents/Paquete eph/eph/R/eph.R", echo=TRUE)
library(eph)
devtools::document()
devtools::check_rhub()
devtools::check_win_devel()
devtools::check_rhub()
devtools::submit_cran()
